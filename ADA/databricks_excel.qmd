---
  title: "Setup Databricks with Excel"
---
  
  <p class="text-muted">The following instructions set up an ODBC connection between your laptop and your DataBricks cluster. Once this connection is set up, Databricks data can then be imported into Microsoft Excel via PowerQuery.</p>
    
------------------------------------------------------------------------
    
# Pre-requisites
  
------------------------------------------------------------------------
    
You must have:
    
  -   Access to Databricks
  -   Access to a SQL Warehouse on DataBricks
  -   Microsoft Excel
  
------------------------------------------------------------------------
    
# Downloading an ODBC driver
    
------------------------------------------------------------------------
    
Note that if you have already downloaded and set up an ODBC driver to connect Databricks to RStudio, then you do not need to repeat these steps to connect to Excel, and can skip to the next section.
    
1.  Install the 'Simba Spark ODBC' driver from the software centre.
  
    i)  Open the Software Centre via the start menu.

    ii) In the 'Applications' tab, click 'Simba Spark ODBC Driver 64-bit'. ![](../images/databricks-software-centre.png)

    iii) Click install.

2.  Get connection details for the SQL Warehouse from Databricks. To set up the connection you will need a few details from a SQL Warehouse within DataBricks.

    i)  Login to [Databricks](https://adb-6882499576863257.17.azuredatabricks.net/?o=6882499576863257)

    ii) Click on the 'SQL Warehouses' tab in the sidebar. ![](../images/databricks-SQL-warehouses.png)

    iii) Click on the name of the warehouse you want to connect to, and click the 'connection details' tab.

    iv) Make a note of the 'Server hostname', 'Port', and 'HTTP Path'.

3.  Get a personal access token from Databricks for authentication.

    i)  In Databricks, click on your email address in the top right corner, then click 'User settings'.

    ii) Go to the 'Developer' tab in the side bar. Next to 'Access tokens', click the 'Manage' button. ![](../images/databricks-access-tokens.png)

    iii) Click the 'Generate new token' button.

    iv) Name the token, then click 'Generate'. *Note that access tokens will only last as long as the value for the 'Lifetime (days)' field. After this period the token will expire, and you will need to create a new one to re-authenticate.*
  
    v)  Make a note of the 'Databricks access token' it has given you, then click 'Done'. **It is important to copy this somewhere as you will not be able to see it through Databricks again.**
  
4.  Setup ODBC connection from your laptop. We now have all the information we need to setup a connection between our laptop and DataBricks.

    i)  In the start menu, search 'ODBC' and open 'ODBC Data Sources (64-bit)'.

    ii) On the 'User DSN' tab click the 'Add...' button.

    iii) In the 'Create New Data Source' window, select 'Simba Spark ODBC Driver' and click 'Finish'.

    iv) In the 'Simba Spark ODBC Driver DSN Setup' window,

        a.  Enter a 'Data Source Name' and 'Description'. Choose a short and sensible data source name and note it down as this is what you will use to connect to Databricks through Excel. *As you can set up more than one cluster on Databricks, use the description to make clear which cluster this connection is for.*
        b.  Set the remaining options to the settings below.
        -   Enter the 'Server Hostname' for your cluster in the 'Host(s):' field (you noted this down in step 2).
        -   In the Port section, remove the default number and use the Port number you noted in step 2. 
        -   Set the Authentication Mechanism to 'User Name and Password'.
        -   Enter the word 'token' into the 'User Name:' field, then enter your 'Databricks access token' in the 'Password:' field.
        -   Change the Thrift Transport option to HTTP.
        -   Click the 'HTTP Options...' button and enter the 'HTTP Path' of your Databricks cluster, then click 'Okay'.
        -   Click the 'SSL Options...' button and tick the 'Enable SSL' box, then click the 'OK' button.
        
        ![](../images/odbc-driver-settings.png)
        c.  Click the 'Test' button to verify the connection has worked. You should see the following message. *If you get an error here, repeat steps 5.e.i -- 5.e.ix again and ensure all the values are correct.*
  
        ![](../images/databricks-test-connection.png)

        d.  Click the 'OK' button to exit the 'Test Results' window, then the 'OK' button in the 'Simba Spark ODBC Driver DSN Setup' window.

Your ODBC connection is now set up. We can now connect to databricks via Microsoft Excel.

------------------------------------------------------------------------
  
# Pulling data into Excel from Databricks
  
------------------------------------------------------------------------
  
  Once you have set up an ODBC connection as detailed above, you can then use that connection to pull data directly from Databricks into Excel. This can be done via PowerQuery.
  
  Click 'Data' in the top ribbon, and then select 'Get Data', 'From Other Sources', 'From ODBC', as shown in the picture below.
  
  ![](../images/odbc_excel_connection.png)

Select the 'Data Source name' that you chose in Step 4.iv.a above.

Clicking 'Advanced options' will allow you to type in SQL code to query the data. This code can be the same as any existing code that you might use in Microsoft SQL Server Management Studio, with some notable differences:
* To create temporary tables, you have to use the SQL command 'CREATE TEMPORARY VIEW'
* If the column names of your table contain spaces, you must surround them with ` symbols (the grave symbol below the esc key)
* If you have multiple queries (such as if you are creating temporary views and then querying the temporary view), these must be split up by semi-colons ;

  ![](../images/odbc_sql_example.png)

If, instead of using a SQL code, you want to use PowerQuery, click 'Ok' and you will see a list of tables. Use the drop down menu to select the table that you want. Then you should click 'Transform Data' rather than 'Load', because you will need to apply appropriate filters to your data before you load it to Excel. If you try to load a table that is too big, then you will likely crash Excel.

This opens up the Power Query Editor. 
